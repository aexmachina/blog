{{!< project}}
<p>A collection of useful functions for developing Ember apps. Best served from the console.</p>

<h2>
<a id="user-content-usage" class="anchor" href="#usage" aria-hidden="true"><span class="octicon octicon-link"></span></a>Usage</h2>

<p>ember-devtools is an ember-cli addon that adds a handy <code>devTools</code> object to your <code>Ember.Application</code>.
To access this from the console you have a few options:</p>

<ol class="task-list">
<li>
<p>Set <code>emberDevTools.global</code> in your <code>config/environment.js</code>.</p>

<pre><code>var ENV = {
  APP: {
    emberDevTools: {global: true}
</code></pre>

<p>You can then access the <code>devTools</code> functions globally (eg. you can run <code>routes()</code> in the console).</p>

<p>If you'd prefer these functions to be under a prefix set <code>emberDevTools: {global: 'foo'}</code> for <code>foo.routes()</code>. </p>
</li>
<li>
<p>Attach your App to global scope and access <code>devTools</code> at <code>App.devTools</code>:</p>

<pre><code>var App = Ember.Application.extend({...});
window.App = App;
</code></pre>

<p>You can then access <code>devTools</code> in the console as <code>App.devTools</code> (eg. <code>App.devTools.routes()</code>).
The <a href="https://github.com/ember-cli/ember-export-application-global">ember-export-application-global</a>
module can also be used to access your app instance from global scope.</p>
</li>
</ol>

<h2>
<a id="user-content-functions" class="anchor" href="#functions" aria-hidden="true"><span class="octicon octicon-link"></span></a>Functions</h2>

<h3>
<a id="user-content-app-functionname" class="anchor" href="#app-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>app: function([name])</code>
</h3>

<p>Returns the named application. <code>name</code> defaults to <code>main</code>.</p>

<h3>
<a id="user-content-routes-function" class="anchor" href="#routes-function" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>routes: function()</code>
</h3>

<p>Returns the names of all routes.</p>

<h3>
<a id="user-content-route-functionname" class="anchor" href="#route-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>route: function([name])</code>
</h3>

<p>Returns the named route. <code>name</code> defaults to the current route.</p>

<h3>
<a id="user-content-router-functionname" class="anchor" href="#router-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>router: function([name])</code>
</h3>

<p>Returns the named router instance. <code>name</code> defaults to <code>main</code>.</p>

<h3>
<a id="user-content-model-functionname" class="anchor" href="#model-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>model: function([name])</code>
</h3>

<p>Returns the model for the named controller. <code>name</code> defaults to the the current route.</p>

<h3>
<a id="user-content-service-functionname" class="anchor" href="#service-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>service: function(name)</code>
</h3>

<p>Performs a lookup for the named service in the <code>container</code> (using `<code>'service:' + name</code>).</p>

<h3>
<a id="user-content-view-functionidordomelement" class="anchor" href="#view-functionidordomelement" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>view: function(idOrDomElement)</code>
</h3>

<p>Return the View instance with the specified id e.g. <code>ember352</code>. If an object
is provided (such as a DOM element) then the <code>id</code> property of the object will be
used.</p>

<h3>
<a id="user-content-controller-functionname" class="anchor" href="#controller-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>controller: function([name])</code>
</h3>

<p>Returns the named controller. <code>name</code> defaults to the current route.</p>

<h3>
<a id="user-content-log-functionpromise-property-geteach" class="anchor" href="#log-functionpromise-property-geteach" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>log: function(promise[, property[, getEach]])</code>
</h3>

<p>Resolves the <code>promise</code> and logs the resolved value using <code>console.log</code>.
Also sets <code>window.$E</code> to the resolved value so you can access it in the dev
tools console.</p>

<p>If <code>property</code> is specified then <code>$E.get(property)</code> will be logged.</p>

<p>If <code>getEach</code> is true then <code>$E.getEach(property)</code> will be logged.</p>

<h4>
<a id="user-content-examples" class="anchor" href="#examples" aria-hidden="true"><span class="octicon octicon-link"></span></a>Examples:</h4>

<pre><code>&gt; log(store.find('organisation')) =&gt; undefined
&gt; $E.get('length') =&gt; 3
&gt; log(store.find('organisation'), 'length') =&gt; 3
&gt; log(store.find('organisation'), 'name', true) =&gt; array of names
</code></pre>

<h3>
<a id="user-content-registry" class="anchor" href="#registry" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>registry</code>
</h3>

<p>Returns the hash of objects in the <code>container</code> registry.</p>

<h3>
<a id="user-content-lookup-functionname" class="anchor" href="#lookup-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>lookup: function(name)</code>
</h3>

<p>Performs a lookup for the named entry in the <code>container</code>, which will in turn
ask its <code>resolver</code> if it's not found.</p>

<h3>
<a id="user-content-lookupfactory-functionname" class="anchor" href="#lookupfactory-functionname" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>lookupFactory: function(name)</code>
</h3>

<p>Performs a lookup for the named factory (as opposed to a new instance) in the <code>container</code>,
which will in turn ask its <code>resolver</code> if it's not found.</p>

<h3>
<a id="user-content-containernamefor-functionobj" class="anchor" href="#containernamefor-functionobj" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>containerNameFor: function(obj)</code>
</h3>

<p>Searches the <code>container</code> registry to find the name for the specified object
(if any).</p>

<h3>
<a id="user-content-inspect" class="anchor" href="#inspect" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>inspect</code>
</h3>

<p>Does what it says, in a manner of speaking. Alias to <code>Ember.inspect</code>.</p>

<h3>
<a id="user-content-logresolver-functionbool--true" class="anchor" href="#logresolver-functionbool--true" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>logResolver: function(bool = true)</code>
</h3>

<p>Switch logging for the resolver on or off.</p>

<h3>
<a id="user-content-logall-functionbool--true" class="anchor" href="#logall-functionbool--true" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>logAll: function(bool = true)</code>
</h3>

<p>Switch logging for all the things on/off.</p>

<h3>
<a id="user-content-globalize-function" class="anchor" href="#globalize-function" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>globalize: function()</code>
</h3>

<p>Attach all of these useful functions to the <code>window</code> object (eww!) - useful
for accessing in the console.</p>

<h3>
<a id="user-content-store" class="anchor" href="#store" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>store</code>
</h3>

<p>The Ember Data <code>Store</code>.</p>

<h3>
<a id="user-content-typemaps" class="anchor" href="#typemaps" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>typeMaps</code>
</h3>

<p>The Ember Data 'type map'.</p>

<h2>
<a id="user-content-installation" class="anchor" href="#installation" aria-hidden="true"><span class="octicon octicon-link"></span></a>Installation</h2>

<h3>
<a id="user-content-ember-cli" class="anchor" href="#ember-cli" aria-hidden="true"><span class="octicon octicon-link"></span></a>Ember CLI</h3>

<pre><code>npm install ember-devtools --save-dev
</code></pre>

<h3>
<a id="user-content-upgrading-from-v20" class="anchor" href="#upgrading-from-v20" aria-hidden="true"><span class="octicon octicon-link"></span></a>Upgrading From v2.0</h3>

<p>ember-devtools is now dependent on ember-cli.</p>
