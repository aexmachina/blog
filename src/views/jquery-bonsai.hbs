{{!< project}}
{{#contentFor 'head'}}
  <link rel='stylesheet' href='/assets/bower_components/jquery-bonsai/jquery.bonsai.css'>
  <script src='/assets/bower_components/jquery-bonsai/jquery.bonsai.js'></script>
  <script src='/assets/bower_components/jquery-qubit/jquery.qubit.js'></script>
  <script src='/assets/bower_components/jquery-json-list/jquery.json-list.js'></script>
{{/contentFor}}

      <p>jquery-bonsai is a lightweight jQuery plugin that takes a big nested list and prunes it
        down to a small expandable tree control.</p>
      <p>Also includes support for checkboxes
        (including 'indeterminate' state), radio buttons and for populating the tree using a
        JSON data source.</p>
      <h2>Installation</h2>
<pre>
bower install jquery-bonsai --save
</pre>
      <h2>Examples</h2>
      <h3>Create a Collapsible Tree from a Nested List</h3>
<pre class="code prettyprint javascript">
$('#music').bonsai();
</pre>
      <script>
      jQuery(function() {
        $('#music').bonsai();
      });
      </script>
      <ol id='music'>
        <li class='expanded'>Instrumental Ensembles
          <ul>
            <li>String section</li>
            <li>Brass and/or Horns sections</li>
            <li>Percussion Sections</li>
          </ul>
        </li>
        <li>Individual Instruments
          <ul>
            <li>Bass Guitar</li>
            <li>Contrabass</li>
            <li>Drums</li>
            <li>Cymbals</li>
            <li>Guitar - Either</li>
            <li>Guitar (Acoustic)</li>
            <li>Guitar (Electric)</li>
            <li>Keyboarded
              <ul>
                <li>Accordion</li>
                <li>Harpsichord</li>
                <li>Organ</li>
                <li>Piano</li>
                <li>Synth
                  <ul>
                    <li>Imitative Synthesis</li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>Non-Pitched Percussion
              <ul>
                <li>Hand Percussion</li>
              </ul>
            </li>
            <li>Horns
              <ul>
                <li>Trombone</li>
                <li>Trumpet</li>
              </ul>
            </li>
            <li>Idiophone</li>
            <li>String</li>
            <li>Woodwind
              <ul>
                <li>Sax
                  <ul>
                    <li>Soprano</li>
                    <li>Alto</li>
                    <li>Tenor</li>
                    <li>Baritone</li>
                  </ul>
                </li>
              </ul>
            </li>
            <li>Other</li>
          </ul>
        </li>
        <li>Lyrical content</li>
        <li>Vocals
          <ul>
            <li>Male</li>
            <li>Female</li>
          </ul>
        </li>
        <li>Elements</li>
        <li>Other</li>
      </ol>
      <h3>A Tree with Checkbox Semantics</h3>
      <p>Checkboxes are handled using the <a href="https://github.com/aexmachina/jquery-qubit">jQuery Qubit</a> library.</p>
      <h3>From Checkboxes in Markup</h3>
<pre class="code prettyprint javascript">
$('#checkboxes').bonsai({
  expandAll: true,
  checkboxes: true, // depends on jquery.qubit plugin
  handleDuplicateCheckboxes: true // optional
});
</pre>
      <script>
      jQuery(function() {
        $('#checkboxes').bonsai({
          expandAll: true,
          checkboxes: true, // depends on jquery.qubit plugin
          handleDuplicateCheckboxes: true // optional
        });
      });
      </script>
      <ol id='checkboxes'>
        <li class='expanded'><input type='checkbox' value='root' /> All
          <ol>
            <li><input type='checkbox' value='1' /> One</li>
            <li>
              <input type='checkbox' value='2' /> Two
              <ol>
                <li>
                  <input type='checkbox' value='3' /> Three
                  <ol>
                    <li><input type='checkbox' value='4' checked /> Four</li>
                    <li><input type='checkbox' name='checkboxes' value='5' /> Five</li>
                  </ol>
                </li>
              </ol>
            </li>
            <li><input type='checkbox' name='checkboxes' value='5' /> Duplicate of five</li>
          </ol>
        </li>
      </ol>
      <h3>Auto-Generated Checkboxes</h3>
      <p>Creates checkboxes for each list item. The name and value for the checkboxes
        are taken from <code>data-name</code> and <code>data-value</code>. The name is inherited from the parent
        items, if not specified. Checked state can be indicated using <code>data-checked</code>.</p>
<pre class="code prettyprint javascript">
$('#auto-checkboxes').bonsai({
  expandAll: true,
  checkboxes: true, // depends on jquery.qubit plugin
  createInputs: 'checkbox' // takes values from data-name and data-value, and data-name is inherited
});
</pre>
      <script>
      jQuery(function() {
        $('#auto-checkboxes').bonsai({
          expandAll: true,
          checkboxes: true, // depends on jquery.qubit plugin
          createInputs: 'checkbox' // takes values from data-name and data-value, and data-name is inherited
        });
      });
      </script>
      <p>The following markup...</p>
      <pre class="code prettyprint javascript">
&lt;ol id='auto-checkboxes' <em>data-name='foo'</em>>
  &lt;li class='expanded' <em>data-value='0'</em>>All
    &lt;ol>
      &lt;li <em>data-value='1'</em>>One&lt;/li>
      &lt;li <em>data-value='2'</em>>
        Two
        &lt;ol>
          &lt;li <em>data-name='baz'</em> <em>data-value='3'</em>>
            Three
            &lt;ol>
              &lt;li <em>data-name='baz'</em> <em>data-value='4'</em> <em>data-checked='1'</em>>Four&lt;/li>
            &lt;/ol>
          &lt;/li>
          &lt;li <em>data-value='5'</em>>Five&lt;/li>
        &lt;/ol>
      &lt;/li>
    &lt;/ol>
  &lt;/li>
&lt;/ol>
      </pre>
      <p>...yields:</p>
      <ol id='auto-checkboxes' data-name='foo'>
        <li class='expanded' data-value='0'>All
          <ol>
            <li data-value='1'>One</li>
            <li data-value='2'>
              Two
              <ol>
                <li data-name='baz' data-value='3'>
                  Three
                  <ol>
                    <li data-name='baz' data-value='4' data-checked='1'>Four</li>
                  </ol>
                </li>
                <li data-value='5'>Five</li>
              </ol>
            </li>
          </ol>
        </li>
      </ol>

      <h3>Auto-Generated Radio Buttons</h3>
      <p>Creates radio buttons for each list item. The name and value for the checkboxes
        are taken from <code>data-name</code> and <code>data-value</code>. The name is inherited from the parent
        items, if not specified. Checked state can be indicated using <code>data-checked</code>.</p>
      <pre class="code prettyprint javascript">
$('#auto-radio-buttons').bonsai({
  expandAll: true,
  createInputs: 'radio'
});
</pre>
      <script>
      jQuery(function() {
        $('#auto-radio-buttons').bonsai({
          expandAll: true,
          createInputs: 'radio' // takes values from data-name and data-value, and data-name is inherited
        });
      });
      </script>
      <p>The following markup...</p>
      <pre class="code prettyprint javascript">
&lt;ol id='auto-checkboxes' <em>data-name='foo'</em>>
  &lt;li class='expanded' <em>data-value='0'</em>>All
    &lt;ol>
      &lt;li <em>data-value='1'</em>>One&lt;/li>
      &lt;li <em>data-value='2'</em>>
        Two
        &lt;ol>
          &lt;li <em>data-value='3'</em>>
            Three
            &lt;ol>
              &lt;li <em>data-value='4'</em> <em>data-checked='1'</em>>Four&lt;/li>
            &lt;/ol>
          &lt;/li>
          &lt;li <em>data-value='5'</em>>Five&lt;/li>
        &lt;/ol>
      &lt;/li>
    &lt;/ol>
  &lt;/li>
&lt;/ol>
      </pre>
      <p>...yields:</p><ol id='auto-radio-buttons' data-name='foo'>
        <li class='expanded' data-value='0'>All
          <ol>
            <li data-value='1'>One</li>
            <li data-value='2'>
              Two
              <ol>
                <li data-value='3'>
                  Three
                  <ol>
                    <li data-value='4' data-checked='1'>Four</li>
                  </ol>
                </li>
                <li data-value='5'>Five</li>
              </ol>
            </li>
          </ol>
        </li>
      </ol>

      <h3>Generate the Tree Using a JSON Data Source</h3>
      <p>Requires the <a href="https://github.com/aexmachina/jquery-json-list">JSON List plugin</a>.</p>
<pre class="code prettyprint javascript">
$('#from-JSON').jsonList({
  url: 'example.json',
  type: 'groupedItems',
  groups: 'locationGroups',
  items: 'locations',
  // onListItem: called for each list item created from the JSON
  onListItem: function(event, listItem, data, isGroup) {
    if (!isGroup) {
      // set the id into a data value so that Bonsai createInputs
      // can set the checkbox value
      listItem.attr('data-value', data.id);
    }
  },
  // success: called after the list is created
  onSuccess: function(event, jsonList) {
    // turn the list into a tree
    $(this.el).find('> ol').bonsai({
      checkboxes: true,
      createInputs: 'checkbox',
      handleDuplicateCheckboxes: true,
      expandAll: true
    });
  }
});
</pre>
      <script>
      $(function() {
        $('#from-JSON').jsonList({
          url: '/assets/js/example.js',
          type: 'groupedItems',
          groups: 'locationGroups',
          items: 'locations',
          // onListItem: called for each list item created from the JSON
          onListItem: function(event, listItem, data, isGroup) {
            if (!isGroup) {
              // set the id into a data value so that Bonsai createInputs
              // can set the checkbox value
              listItem.attr('data-value', data.id);
            }
          },
          // success: called after the list is created
          onSuccess: function(event, jsonList) {
            // turn the list into a tree
            $(this.el).find('> ol').bonsai({
              checkboxes: true,
              createInputs: 'checkbox',
              handleDuplicateCheckboxes: true,
              expandAll: true
            });
          }
        });
      });
      </script>
      <div id="from-JSON"></div>
      <h2>API</h2>
      <p>See the <a href="https://github.com/aexmachina/jquery-bonsai#api">README on Github</a></p>
      <p>If the DOM changes then you'll need to call <code>update</code>:</p>
      <pre class="code prettyprint javascript">
$('#from-JSON > ol').bonsai('update');
</pre>
